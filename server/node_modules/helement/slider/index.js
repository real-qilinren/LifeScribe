/**
 *@author   huazhiqiang
 *@createTime   2019/6/5
 *@updateTime   2019/6/5
 *@description  module  component
 */
import sliderButton from './button.vue'
export default {
  name: "HSlider",
  components: { sliderButton },
  props: {
    // 自定义类名
    className: {
      type: String,
      default: ""
    },
    // 类型
    type: {
      type: String,
      default: "default"
    },
    // disabled
    disabled: {
      type: Boolean,
      default: false
    },
    // 是否是范围性
    range: {
      type: Boolean,
      default: false
    },
    // v-model绑定值
    value: {
      type: [Number, Array],
      default: 0
    },
    // 最小值
    min: {
      type: Number,
      default: 0
    },
    // 最大值
    max: {
      type: Number,
      default: 100
    },
    // 步数
    step: {
      type: Number,
      default: 1
    }
  },
  data() {
    return {
      scope: {
        // disabled
        disabled: this.disabled,
        // 类型
        type: this.type,
        // 自定义类名
        className: this.className,
        // 是否范围性
        range: this.range,
        // v-model绑定值
        value: this.value,
        // min
        min: this.min,
        // max
        max: this.max,
        // 第一个所占比例
        firstValue: null,
        // 第二个所占比例
        secondValue: null,
        // step 步数
        step: this.step

      }
    }
  },
  watch: {
    value: {
      immediate: true,
      deep: true,
      handler(newVal, oldVal) {
        // 监听变化 初始化开始按钮和结束按钮的值
        if(typeof newVal === 'object') {
          this.scope.firstValue = newVal[0];
          this.scope.secondValue = newVal[1];
        } else {
          this.scope.firstValue = newVal;
        }
      }
    },
    emitValue: {
      deep: true,
      handler(newVal, oldVal) {
        if(this.scope.range) {
          this.$emit('input', [newVal.firstValue, newVal.secondValue])
        } else {
          this.$emit('input', newVal.firstValue)
        }
      }
    }
  },
  computed: {
    emitValue() {
      return {
        firstValue: this.scope.firstValue,
        secondValue: this.scope.secondValue
      }
    },
    // 找出最小值
    minValue() {
      return Math.min(this.firstPercent, this.secondPercent);
    },
    // 找出最大值
    maxValue() {
      return Math.max(this.firstPercent, this.secondPercent);
    },
    // 第一个值所占比例
    firstPercent() {
      let { firstValue, min, max } = this.scope;
      return (firstValue - min) * 100 / (max - min)
    },
    // 第二个值的所占比例
    secondPercent() {
      let { secondValue, min, max } = this.scope;
      return (secondValue - min) * 100 / (max - min)
    },
    // slider-bar 样式
    sliderBarStyle() {
      return this.scope.range ? {
        left: this.minValue + '%',
        width: this.maxValue - this.minValue + '%'
      } : {
        left: '0%',
        width: this.firstPercent + '%'
      }
    },
    sliderSize() {
      return this.$el.clientWidth;
    }
  },
  methods: {
    getClass() {
      //  最终的class
      let _class = this.scope.className + ' '
      let _type = {
        default: 'default', // 默认按钮
        primary: 'primary', // 主色调
        success: 'success', // 成功
      }[this.scope.type] + ' ';
      // disabled
      let _disabled = this.scope.disabled ? ' disabled' : ''
      // 按钮最终类名
      _class = _class + _type + _disabled
      // 返回class
      return _class
    }
  }
}
